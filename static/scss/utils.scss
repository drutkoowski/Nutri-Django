.not-visible {
  display: none !important;
}

.visible {
  display: inline;
}

.reveal {
  position: relative;
  opacity: 0;
}

.reveal.active {
  opacity: 1;
}
.active.fade-bottom {
  animation: fade-bottom 1s ease-in;
}
.active.fade-left {

  animation: fade-left 1s ease-in;
}
.active.fade-right {

  animation: fade-right 1s ease-in;
}

// svg color

.filter-gold {
  filter: invert(78%) sepia(67%) saturate(657%) hue-rotate(356deg) brightness(98%) contrast(107%);
}

.filter-white {
  filter: invert(98%) sepia(0%) saturate(0%) hue-rotate(37deg) brightness(103%) contrast(105%);
}

.filter-green {
  filter: invert(81%) sepia(58%) saturate(4641%) hue-rotate(44deg) brightness(110%) contrast(125%);
}

.filter-red {
  filter: invert(16%) sepia(79%) saturate(5943%) hue-rotate(342deg) brightness(89%) contrast(93%);
}

.margin-top-md {
  margin-top: 5rem;
}

.margin-bottom-md {
  margin-bottom: 5rem;
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
10px = 0.625 em !!!
*/
@mixin respond($breakpoint) {

    @if $breakpoint == phone-sm {
        @media only screen and (max-width: 21.875em) { @content };    //350px
    }

    @if $breakpoint == phone-md-sm {
        @media only screen and (max-width: 25em) { @content };    //400px
    }

    @if $breakpoint == phone-md {
        @media only screen and (max-width: 28.5em) { @content };    //450px
    }

    @if $breakpoint == phone-md-lg {
        @media only screen and (max-width: 31.25em) { @content };    //500px
    }

    @if $breakpoint == phone-lg {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }

    @if $breakpoint == tab-sm {
        @media only screen and (max-width: 46.875em) { @content };    //750px
    }

    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }

     @if $breakpoint == tab-md {
        @media only screen and (max-width: 62.5em) { @content };     //1000px
    }

    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == tab-desktop {
        @media only screen and (max-width: 84.375em) { @content };    //1350px
    }
    @if $breakpoint == md-desktop {
        @media only screen and (max-width: 93.75em) { @content };    //1500px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    // 1800px
    }

}



.progress{
  &--0 {
    transform: translateX(-88.8889%);
  }

  &--1 {
    transform: translateX(-73.8889%);
  }

   &--2 {
    transform: translateX(-54.8889%);
  }

  &--3 {
    transform: translateX(-41.8889%);
  }

    &--4 {
    transform: translateX(-18.8889%);
  }

  &--5 {
    transform: translateX(-0.00%);
  }

}


.input-scale {
  &:focus {
    transform: scale(1.05);
  }
}

.shake-animation {
   animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
   transform: translate3d(0, 0, 0);
}

.add-icon {
  background-image: url("/static/images/svg/plus.svg");
  width: 2rem;
  height: 2rem;
  cursor: pointer;
}

.remove-icon {
  background-image: url("/static/images/svg/minus.svg");
  width: 2rem;
  height: 2rem;
  cursor: pointer;
}

.center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.input-invalid {
  background-color: rgba(241, 81, 81, 0.69);
  color: white;
}

.input-validity-info{
  height: 2rem;
  margin-top: 1.5rem;
  font-size: 1.2rem;
  color: rgba(255, 0, 0, 0.69);
  font-weight: bold;
  transition: all .3s ease-in;
  animation-name: fade-bottom;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}